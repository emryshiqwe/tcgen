!(function(e) {
  "use strict";
  var a = {
    escape: function(e) {
      return e.replace(/([.*+?^${}()|\[\]\/\\])/g, "\\$1");
    },
    parseExtension: t,
    mimeType: function(e) {
      e = t(e).toLowerCase();
      return (
        (function() {
          var e = "application/font-woff",
            t = "image/jpeg";
          return {
            woff: e,
            woff2: e,
            ttf: "application/font-truetype",
            eot: "application/vnd.ms-fontobject",
            png: "image/png",
            jpg: t,
            jpeg: t,
            gif: "image/gif",
            tiff: "image/tiff",
            svg: "image/svg+xml"
          };
        })()[e] || ""
      );
    },
    dataAsUrl: function(e, t) {
      return "data:" + t + ";base64," + e;
    },
    isDataUrl: function(e) {
      return -1 !== e.search(/^(data:)/);
    },
    canvasToBlob: function(t) {
      return t.toBlob
        ? new Promise(function(e) {
            t.toBlob(e);
          })
        : (function(i) {
            return new Promise(function(e) {
              for (
                var t = window.atob(i.toDataURL().split(",")[1]),
                  n = t.length,
                  r = new Uint8Array(n),
                  o = 0;
                o < n;
                o++
              )
                r[o] = t.charCodeAt(o);
              e(new Blob([r], { type: "image/png" }));
            });
          })(t);
    },
    resolveUrl: function(e, t) {
      var n = document.implementation.createHTMLDocument(),
        r = n.createElement("base");
      n.head.appendChild(r);
      var o = n.createElement("a");
      return n.body.appendChild(o), (r.href = t), (o.href = e), o.href;
    },
    getAndEncode: function(i) {
      d.impl.options.cacheBust &&
        (i += (/\?/.test(i) ? "&" : "?") + new Date().getTime());
      return new Promise(function(n) {
        var e,
          t,
          r = new XMLHttpRequest();
        function o(e) {
          console.error(e), n("");
        }
        (r.onreadystatechange = function() {
          if (4 !== r.readyState) return;
          if (200 !== r.status)
            return void (e
              ? n(e)
              : o("cannot fetch resource: " + i + ", status: " + r.status));
          var t = new FileReader();
          (t.onloadend = function() {
            var e = t.result.split(/,/)[1];
            n(e);
          }),
            t.readAsDataURL(r.response);
        }),
          (r.ontimeout = function() {
            e
              ? n(e)
              : o("timeout of 30000ms occured while fetching resource: " + i);
          }),
          (r.responseType = "blob"),
          (r.timeout = 3e4),
          r.open("GET", i, !0),
          r.send(),
          !d.impl.options.imagePlaceholder ||
            ((t = d.impl.options.imagePlaceholder.split(/,/)) &&
              t[1] &&
              (e = t[1]));
      });
    },
    uid: (function() {
      var e = 0;
      return function() {
        return (
          "u" +
          (
            "0000" + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)
          ).slice(-4) +
          e++
        );
      };
    })(),
    delay: function(n) {
      return function(t) {
        return new Promise(function(e) {
          setTimeout(function() {
            e(t);
          }, n);
        });
      };
    },
    asArray: function(e) {
      for (var t = [], n = e.length, r = 0; r < n; r++) t.push(e[r]);
      return t;
    },
    escapeXhtml: function(e) {
      return e.replace(/#/g, "%23").replace(/\n/g, "%0A");
    },
    makeImage: function(r) {
      return new Promise(function(e, t) {
        var n = new Image();
        (n.onload = function() {
          e(n);
        }),
          (n.onerror = t),
          (n.src = r);
      });
    },
    width: function(e) {
      var t = r(e, "border-left-width"),
        n = r(e, "border-right-width");
      return e.scrollWidth + t + n;
    },
    height: function(e) {
      var t = r(e, "border-top-width"),
        n = r(e, "border-bottom-width");
      return e.scrollHeight + t + n;
    }
  };
  function t(e) {
    e = /\.([^\.\/]*?)$/g.exec(e);
    return e ? e[1] : "";
  }
  function r(e, t) {
    t = window.getComputedStyle(e).getPropertyValue(t);
    return parseFloat(t.replace("px", ""));
  }
  var o,
    i = {
      inlineAll: function(t, r, o) {
        return n(t)
          ? Promise.resolve(t)
              .then(u)
              .then(function(e) {
                var n = Promise.resolve(t);
                return (
                  e.forEach(function(t) {
                    n = n.then(function(e) {
                      return c(e, t, r, o);
                    });
                  }),
                  n
                );
              })
          : Promise.resolve(t);
      },
      shouldProcess: n,
      impl: { readUrls: u, inline: c }
    };
  function n(e) {
    return -1 !== e.search(o);
  }
  function u(e) {
    for (var t, n = []; null !== (t = o.exec(e)); ) n.push(t[1]);
    return n.filter(function(e) {
      return !a.isDataUrl(e);
    });
  }
  function c(n, r, t, e) {
    return Promise.resolve(r)
      .then(function(e) {
        return t ? a.resolveUrl(e, t) : e;
      })
      .then(e || a.getAndEncode)
      .then(function(e) {
        return a.dataAsUrl(e, a.mimeType(r));
      })
      .then(function(e) {
        return n.replace(
          ((t = r),
          new RegExp("(url\\(['\"]?)(" + a.escape(t) + ")(['\"]?\\))", "g")),
          "$1" + e + "$3"
        );
        var t;
      });
  }
  var l = {
    resolveAll: function() {
      return s(document)
        .then(function(e) {
          return Promise.all(
            e.map(function(e) {
              return e.resolve();
            })
          );
        })
        .then(function(e) {
          return e.join("\n");
        });
    },
    impl: { readAll: s }
  };
  function s() {
    return Promise.resolve(a.asArray(document.styleSheets))
      .then(function(e) {
        var n = [];
        return (
          e.forEach(function(t) {
            try {
              a.asArray(t.cssRules || []).forEach(n.push.bind(n));
            } catch (e) {
              console.log(
                "Error while reading CSS rules from " + t.href,
                e.toString()
              );
            }
          }),
          n
        );
      })
      .then(function(e) {
        return e
          .filter(function(e) {
            return e.type === CSSRule.FONT_FACE_RULE;
          })
          .filter(function(e) {
            return i.shouldProcess(e.style.getPropertyValue("src"));
          });
      })
      .then(function(e) {
        return e.map(t);
      });
    function t(t) {
      return {
        resolve: function() {
          var e = (t.parentStyleSheet || {}).href;
          return i.inlineAll(t.cssText, e);
        },
        src: function() {
          return t.style.getPropertyValue("src");
        }
      };
    }
  }
  var f = {
    inlineAll: function t(e) {
      if (!(e instanceof Element)) return Promise.resolve(e);
      return n(e).then(function() {
        return e instanceof HTMLImageElement
          ? h(e).inline()
          : Promise.all(
              a.asArray(e.childNodes).map(function(e) {
                return t(e);
              })
            );
      });
      function n(t) {
        var e = t.style.getPropertyValue("background");
        return e
          ? i
              .inlineAll(e)
              .then(function(e) {
                t.style.setProperty(
                  "background",
                  e,
                  t.style.getPropertyPriority("background")
                );
              })
              .then(function() {
                return t;
              })
          : Promise.resolve(t);
      }
    },
    impl: { newImage: h }
  };
  function h(r) {
    return {
      inline: function(e) {
        return a.isDataUrl(r.src)
          ? Promise.resolve()
          : Promise.resolve(r.src)
              .then(e || a.getAndEncode)
              .then(function(e) {
                return a.dataAsUrl(e, a.mimeType(r.src));
              })
              .then(function(n) {
                return new Promise(function(e, t) {
                  (r.onload = e), (r.onerror = t), (r.src = n);
                });
              });
      }
    };
  }
  var m = {
      imagePlaceholder: void 0,
      cacheBust: !(o = /url\(['"]?([^'"]+?)['"]?\)/g)
    },
    d = {
      toSvg: g,
      toPng: function(e, t) {
        return p(e, t || {}).then(function(e) {
          return e.toDataURL();
        });
      },
      toJpeg: function(e, t) {
        return p(e, (t = t || {})).then(function(e) {
          return e.toDataURL("image/jpeg", t.quality || 1);
        });
      },
      toBlob: function(e, t) {
        return p(e, t || {}).then(a.canvasToBlob);
      },
      toPixelData: function(t, e) {
        return p(t, e || {}).then(function(e) {
          return e
            .getContext("2d")
            .getImageData(0, 0, a.width(t), a.height(t)).data;
        });
      },
      impl: { fontFaces: l, images: f, util: a, inliner: i, options: {} }
    };
  function g(r, o) {
    var e;
    return (
      void 0 === (e = o = o || {}).imagePlaceholder
        ? (d.impl.options.imagePlaceholder = m.imagePlaceholder)
        : (d.impl.options.imagePlaceholder = e.imagePlaceholder),
      void 0 === e.cacheBust
        ? (d.impl.options.cacheBust = m.cacheBust)
        : (d.impl.options.cacheBust = e.cacheBust),
      Promise.resolve(r)
        .then(function(e) {
          return (function o(t, n, e) {
            if (!e && n && !n(t)) return Promise.resolve();
            return Promise.resolve(t)
              .then(r)
              .then(function(e) {
                return i(t, e, n);
              })
              .then(function(e) {
                return u(t, e);
              });
            function r(e) {
              return e instanceof HTMLCanvasElement
                ? a.makeImage(e.toDataURL())
                : e.cloneNode(!1);
            }
            function i(e, t, n) {
              var e = e.childNodes;
              return 0 === e.length
                ? Promise.resolve(t)
                : r(t, a.asArray(e), n).then(function() {
                    return t;
                  });
              function r(t, e, n) {
                var r = Promise.resolve();
                return (
                  e.forEach(function(e) {
                    r = r
                      .then(function() {
                        return o(e, n);
                      })
                      .then(function(e) {
                        e && t.appendChild(e);
                      });
                  }),
                  r
                );
              }
            }
            function u(i, u) {
              return u instanceof Element
                ? Promise.resolve()
                    .then(e)
                    .then(t)
                    .then(n)
                    .then(r)
                    .then(function() {
                      return u;
                    })
                : u;
              function e() {
                function e(e, t) {
                  function n(t, n) {
                    a.asArray(t).forEach(function(e) {
                      n.setProperty(
                        e,
                        t.getPropertyValue(e),
                        t.getPropertyPriority(e)
                      );
                    });
                  }
                  e.cssText ? (t.cssText = e.cssText) : n(e, t);
                }
                e(window.getComputedStyle(i), u.style);
              }
              function t() {
                function t(e) {
                  var t,
                    n = window.getComputedStyle(i, e),
                    r = n.getPropertyValue("content");
                  function o(e, t, n) {
                    var t = "." + e + ":" + t,
                      n = (n.cssText ? r : o)(n);
                    return document.createTextNode(t + "{" + n + "}");
                    function r(e) {
                      var t = e.getPropertyValue("content");
                      return e.cssText + " content: " + t + ";";
                    }
                    function o(t) {
                      return (
                        a
                          .asArray(t)
                          .map(e)
                          .join("; ") + ";"
                      );
                      function e(e) {
                        return (
                          e +
                          ": " +
                          t.getPropertyValue(e) +
                          (t.getPropertyPriority(e) ? " !important" : "")
                        );
                      }
                    }
                  }
                  "" !== r &&
                    "none" !== r &&
                    ((t = a.uid()),
                    (u.className = u.className + " " + t),
                    (r = document.createElement("style")).appendChild(
                      o(t, e, n)
                    ),
                    u.appendChild(r));
                }
                [":before", ":after"].forEach(function(e) {
                  t(e);
                });
              }
              function n() {
                i instanceof HTMLTextAreaElement && (u.innerHTML = i.value),
                  i instanceof HTMLInputElement &&
                    u.setAttribute("value", i.value);
              }
              function r() {
                u instanceof SVGElement &&
                  (u.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
                  u instanceof SVGRectElement &&
                    ["width", "height"].forEach(function(e) {
                      var t = u.getAttribute(e);
                      t && u.style.setProperty(e, t);
                    }));
              }
            }
          })(e, o.filter, !0);
        })
        .then(v)
        .then(y)
        .then(function(t) {
          o.bgcolor && (t.style.backgroundColor = o.bgcolor);
          o.width && (t.style.width = o.width + "px");
          o.height && (t.style.height = o.height + "px");
          o.style &&
            Object.keys(o.style).forEach(function(e) {
              t.style[e] = o.style[e];
            });
          return t;
        })
        .then(function(e) {
          return (
            (e = e),
            (t = o.width || a.width(r)),
            (n = o.height || a.height(r)),
            Promise.resolve(e)
              .then(function(e) {
                return (
                  e.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"),
                  new XMLSerializer().serializeToString(e)
                );
              })
              .then(a.escapeXhtml)
              .then(function(e) {
                return (
                  '<foreignObject x="0" y="0" width="100%" height="100%">' +
                  e +
                  "</foreignObject>"
                );
              })
              .then(function(e) {
                return (
                  '<svg xmlns="http://www.w3.org/2000/svg" width="' +
                  t +
                  '" height="' +
                  n +
                  '">' +
                  e +
                  "</svg>"
                );
              })
              .then(function(e) {
                return "data:image/svg+xml;charset=utf-8," + e;
              })
          );
          var t, n;
        })
    );
  }
  function p(n, r) {
    return g(n, r)
      .then(a.makeImage)
      .then(a.delay(100))
      .then(function(e) {
        var t = (function(e) {
          var t = document.createElement("canvas");
          (t.width = r.width || a.width(e)),
            (t.height = r.height || a.height(e)),
            r.bgcolor &&
              (((e = t.getContext("2d")).fillStyle = r.bgcolor),
              e.fillRect(0, 0, t.width, t.height));
          return t;
        })(n);
        return t.getContext("2d").drawImage(e, 0, 0), t;
      });
  }
  function v(n) {
    return l.resolveAll().then(function(e) {
      var t = document.createElement("style");
      return n.appendChild(t), t.appendChild(document.createTextNode(e)), n;
    });
  }
  function y(e) {
    return f.inlineAll(e).then(function() {
      return e;
    });
  }
  "undefined" != typeof module ? (module.exports = d) : (e.domtoimage = d);
})(this);
